services:
  account:
    build:
      context: ..
      dockerfile: src/account/Dockerfile
    container_name: account-service
    ports:
      - "5001:8080"
    networks:
      - microservices

    environment:
      - POSTGRES_HOST=${POSTGRES_HOST}
      - POSTGRES_PORT=${POSTGRES_PORT}
      - POSTGRES_DATABASE=${POSTGRES_DATABASE_ACCOUNT}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    depends_on:
      - postgres_db

  payment:
    build:
      context: ..
      dockerfile: src/payment/Dockerfile
    container_name: payment-service
    ports:
      - "5002:8080"
    networks:
      - microservices

  product:
    build:
      context: ..
      dockerfile: src/product/Dockerfile
    container_name: product-service
    ports:
      - "5003:8080"
    networks:
      - microservices

  security:
    build:
      context: ..
      dockerfile: src/security/Dockerfile
    container_name: security-service
    ports:
      - "5004:8080"
    networks:
      - microservices

  postgres_db:
    image: postgres:latest
    container_name: postgres_db
    environment:
      - POSTGRES_DB=${POSTGRES_DATABASE}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5434:5432"
    networks:
      - microservices

networks:
  microservices:
    driver: bridge

volumes:
  postgres_data: